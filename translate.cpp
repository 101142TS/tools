#include <stdint.h>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
typedef uint8_t             u1;
typedef uint16_t            u2;
typedef uint32_t            u4;
typedef uint64_t            u8;
typedef int8_t              s1;
typedef int16_t             s2;
typedef int32_t             s4;
typedef int64_t             s8;
int OpcodeLength[256] = {
    // BEGIN(libdex-opcode-enum); GENERATED AUTOMATICALLY BY opcode-gen
    1, //OP_NOP                          = 0x00,
    1, //OP_MOVE                         = 0x01,
    2, //OP_MOVE_FROM16                  = 0x02,
    3, //OP_MOVE_16                      = 0x03,
    1, //OP_MOVE_WIDE                    = 0x04,
    2, //OP_MOVE_WIDE_FROM16             = 0x05,
    3, //OP_MOVE_WIDE_16                 = 0x06,
    1, //OP_MOVE_OBJECT                  = 0x07,
    2, //OP_MOVE_OBJECT_FROM16           = 0x08,
    3, //OP_MOVE_OBJECT_16               = 0x09,
    1, //OP_MOVE_RESULT                  = 0x0a,
    1, //OP_MOVE_RESULT_WIDE             = 0x0b,
    1, //OP_MOVE_RESULT_OBJECT           = 0x0c,
    1, //OP_MOVE_EXCEPTION               = 0x0d,
    1, //OP_RETURN_VOID                  = 0x0e,
    1, //OP_RETURN                       = 0x0f,
    1, //OP_RETURN_WIDE                  = 0x10,
    1, //OP_RETURN_OBJECT                = 0x11,
    1, //OP_CONST_4                      = 0x12,
    2, //OP_CONST_16                     = 0x13,
    3, //OP_CONST                        = 0x14,
    2, //OP_CONST_HIGH16                 = 0x15,
    2, //OP_CONST_WIDE_16                = 0x16,
    3, //OP_CONST_WIDE_32                = 0x17,
    5, //OP_CONST_WIDE                   = 0x18,
    2, //OP_CONST_WIDE_HIGH16            = 0x19,
    2, //OP_CONST_STRING                 = 0x1a,
    3, //OP_CONST_STRING_JUMBO           = 0x1b,
    2, //OP_CONST_CLASS                  = 0x1c,
    1, //OP_MONITOR_ENTER                = 0x1d,
    1, //OP_MONITOR_EXIT                 = 0x1e,
    2, //OP_CHECK_CAST                   = 0x1f,
    2, //OP_INSTANCE_OF                  = 0x20,
    1, //OP_ARRAY_LENGTH                 = 0x21,
    2, //OP_NEW_INSTANCE                 = 0x22,
    2, //OP_NEW_ARRAY                    = 0x23,
    3, //OP_FILLED_NEW_ARRAY             = 0x24,
    3, //OP_FILLED_NEW_ARRAY_RANGE       = 0x25,
    3, //OP_FILL_ARRAY_DATA              = 0x26,
    1, //OP_THROW                        = 0x27,
    1, //OP_GOTO                         = 0x28,
    2, //OP_GOTO_16                      = 0x29,
    3, //OP_GOTO_32                      = 0x2a,
    3, //OP_PACKED_SWITCH                = 0x2b,
    3, //OP_SPARSE_SWITCH                = 0x2c,
    2, //OP_CMPL_FLOAT                   = 0x2d,
    2, //OP_CMPG_FLOAT                   = 0x2e,
    2, //OP_CMPL_DOUBLE                  = 0x2f,
    2, //OP_CMPG_DOUBLE                  = 0x30,
    2, //OP_CMP_LONG                     = 0x31,
    2, //OP_IF_EQ                        = 0x32,
    2, //OP_IF_NE                        = 0x33,
    2, //OP_IF_LT                        = 0x34,
    2, //OP_IF_GE                        = 0x35,
    2, //OP_IF_GT                        = 0x36,
    2, //OP_IF_LE                        = 0x37,
    2, //OP_IF_EQZ                       = 0x38,
    2, //OP_IF_NEZ                       = 0x39,
    2, //OP_IF_LTZ                       = 0x3a,
    2, //OP_IF_GEZ                       = 0x3b,
    2, //OP_IF_GTZ                       = 0x3c,
    2, //OP_IF_LEZ                       = 0x3d,
    1, //OP_UNUSED_3E                    = 0x3e,
    1, //OP_UNUSED_3F                    = 0x3f,
    1, //OP_UNUSED_40                    = 0x40,
    1, //OP_UNUSED_41                    = 0x41,
    1, //OP_UNUSED_42                    = 0x42,
    1, //OP_UNUSED_43                    = 0x43,
    2, //OP_AGET                         = 0x44,
    2, //OP_AGET_WIDE                    = 0x45,
    2, //OP_AGET_OBJECT                  = 0x46,
    2, //OP_AGET_BOOLEAN                 = 0x47,
    2, //OP_AGET_BYTE                    = 0x48,
    2, //OP_AGET_CHAR                    = 0x49,
    2, //OP_AGET_SHORT                   = 0x4a,
    2, //OP_APUT                         = 0x4b,
    2, //OP_APUT_WIDE                    = 0x4c,
    2, //OP_APUT_OBJECT                  = 0x4d,
    2, //OP_APUT_BOOLEAN                 = 0x4e,
    2, //OP_APUT_BYTE                    = 0x4f,
    2, //OP_APUT_CHAR                    = 0x50,
    2, //OP_APUT_SHORT                   = 0x51,
    2, //OP_IGET                         = 0x52,
    2, //OP_IGET_WIDE                    = 0x53,
    2, //OP_IGET_OBJECT                  = 0x54,
    2, //OP_IGET_BOOLEAN                 = 0x55,
    2, //OP_IGET_BYTE                    = 0x56,
    2, //OP_IGET_CHAR                    = 0x57,
    2, //OP_IGET_SHORT                   = 0x58,
    2, //OP_IPUT                         = 0x59,
    2, //OP_IPUT_WIDE                    = 0x5a,
    2, //OP_IPUT_OBJECT                  = 0x5b,
    2, //OP_IPUT_BOOLEAN                 = 0x5c,
    2, //OP_IPUT_BYTE                    = 0x5d,
    2, //OP_IPUT_CHAR                    = 0x5e,
    2, //OP_IPUT_SHORT                   = 0x5f,
    2, //OP_SGET                         = 0x60,
    2, //OP_SGET_WIDE                    = 0x61,
    2, //OP_SGET_OBJECT                  = 0x62,
    2, //OP_SGET_BOOLEAN                 = 0x63,
    2, //OP_SGET_BYTE                    = 0x64,
    2, //OP_SGET_CHAR                    = 0x65,
    2, //OP_SGET_SHORT                   = 0x66,
    2, //OP_SPUT                         = 0x67,
    2, //OP_SPUT_WIDE                    = 0x68,
    2, //OP_SPUT_OBJECT                  = 0x69,
    2, //OP_SPUT_BOOLEAN                 = 0x6a,
    2, //OP_SPUT_BYTE                    = 0x6b,
    2, //OP_SPUT_CHAR                    = 0x6c,
    2, //OP_SPUT_SHORT                   = 0x6d,
    3, //OP_INVOKE_VIRTUAL               = 0x6e,
    3, //OP_INVOKE_SUPER                 = 0x6f,
    3, //OP_INVOKE_DIRECT                = 0x70,
    3, //OP_INVOKE_STATIC                = 0x71,
    3, //OP_INVOKE_INTERFACE             = 0x72,
    1, //OP_UNUSED_73                    = 0x73,
    3, //OP_INVOKE_VIRTUAL_RANGE         = 0x74,
    3, //OP_INVOKE_SUPER_RANGE           = 0x75,
    3, //OP_INVOKE_DIRECT_RANGE          = 0x76,
    3, //OP_INVOKE_STATIC_RANGE          = 0x77,
    3, //OP_INVOKE_INTERFACE_RANGE       = 0x78,
    1, //OP_UNUSED_79                    = 0x79,
    1, //OP_UNUSED_7A                    = 0x7a,
    1, //OP_NEG_INT                      = 0x7b,
    1, //OP_NOT_INT                      = 0x7c,
    1, //OP_NEG_LONG                     = 0x7d,
    1, //OP_NOT_LONG                     = 0x7e,
    1, //OP_NEG_FLOAT                    = 0x7f,
    1, //OP_NEG_DOUBLE                   = 0x80,
    1, //OP_INT_TO_LONG                  = 0x81,
    1, //OP_INT_TO_FLOAT                 = 0x82,
    1 ,//OP_INT_TO_DOUBLE                = 0x83,
    1, //OP_LONG_TO_INT                  = 0x84,
    1, //OP_LONG_TO_FLOAT                = 0x85,
    1, //OP_LONG_TO_DOUBLE               = 0x86,
    1, //OP_FLOAT_TO_INT                 = 0x87,
    1, //OP_FLOAT_TO_LONG                = 0x88,
    1, //OP_FLOAT_TO_DOUBLE              = 0x89,
    1, //OP_DOUBLE_TO_INT                = 0x8a,
    1, //OP_DOUBLE_TO_LONG               = 0x8b,
    1, //OP_DOUBLE_TO_FLOAT              = 0x8c,
    1, //OP_INT_TO_BYTE                  = 0x8d,
    1, //OP_INT_TO_CHAR                  = 0x8e,
    1, //OP_INT_TO_SHORT                 = 0x8f,
    2, //OP_ADD_INT                      = 0x90,
    2, //OP_SUB_INT                      = 0x91,
    2, //OP_MUL_INT                      = 0x92,
    2, //OP_DIV_INT                      = 0x93,
    2, //OP_REM_INT                      = 0x94,
    2, //OP_AND_INT                      = 0x95,
    2, //OP_OR_INT                       = 0x96,
    2, //OP_XOR_INT                      = 0x97,
    2, //OP_SHL_INT                      = 0x98,
    2, //OP_SHR_INT                      = 0x99,
    2, //OP_USHR_INT                     = 0x9a,
    2, //OP_ADD_LONG                     = 0x9b,
    2, //OP_SUB_LONG                     = 0x9c,
    2, //OP_MUL_LONG                     = 0x9d,
    2, //OP_DIV_LONG                     = 0x9e,
    2, //OP_REM_LONG                     = 0x9f,
    2, //OP_AND_LONG                     = 0xa0,
    2, //OP_OR_LONG                      = 0xa1,
    2, //OP_XOR_LONG                     = 0xa2,
    2, //OP_SHL_LONG                     = 0xa3,
    2, //OP_SHR_LONG                     = 0xa4,
    2, //OP_USHR_LONG                    = 0xa5,
    2, //OP_ADD_FLOAT                    = 0xa6,
    2, //OP_SUB_FLOAT                    = 0xa7,
    2, //OP_MUL_FLOAT                    = 0xa8,
    2, //OP_DIV_FLOAT                    = 0xa9,
    2, //OP_REM_FLOAT                    = 0xaa,
    2, //OP_ADD_DOUBLE                   = 0xab,
    2, //OP_SUB_DOUBLE                   = 0xac,
    2, //OP_MUL_DOUBLE                   = 0xad,
    2, //OP_DIV_DOUBLE                   = 0xae,
    2, //OP_REM_DOUBLE                   = 0xaf,
    1, //OP_ADD_INT_2ADDR                = 0xb0,
    1, //OP_SUB_INT_2ADDR                = 0xb1,
    1, //OP_MUL_INT_2ADDR                = 0xb2,
    1, //OP_DIV_INT_2ADDR                = 0xb3,
    1, //OP_REM_INT_2ADDR                = 0xb4,
    1, //OP_AND_INT_2ADDR                = 0xb5,
    1, //OP_OR_INT_2ADDR                 = 0xb6,
    1, //OP_XOR_INT_2ADDR                = 0xb7,
    1, //OP_SHL_INT_2ADDR                = 0xb8,
    1, //OP_SHR_INT_2ADDR                = 0xb9,
    1, //OP_USHR_INT_2ADDR               = 0xba,
    1, //OP_ADD_LONG_2ADDR               = 0xbb,
    1, //OP_SUB_LONG_2ADDR               = 0xbc,
    1, //OP_MUL_LONG_2ADDR               = 0xbd,
    1, //OP_DIV_LONG_2ADDR               = 0xbe,
    1, //OP_REM_LONG_2ADDR               = 0xbf,
    1, //OP_AND_LONG_2ADDR               = 0xc0,
    1, //OP_OR_LONG_2ADDR                = 0xc1,
    1, //OP_XOR_LONG_2ADDR               = 0xc2,
    1, //OP_SHL_LONG_2ADDR               = 0xc3,
    1, //OP_SHR_LONG_2ADDR               = 0xc4,
    1, //OP_USHR_LONG_2ADDR              = 0xc5,
    1, //OP_ADD_FLOAT_2ADDR              = 0xc6,
    1, //OP_SUB_FLOAT_2ADDR              = 0xc7,
    1, //OP_MUL_FLOAT_2ADDR              = 0xc8,
    1, //OP_DIV_FLOAT_2ADDR              = 0xc9,
    1, //OP_REM_FLOAT_2ADDR              = 0xca,
    1, //OP_ADD_DOUBLE_2ADDR             = 0xcb,
    1, //OP_SUB_DOUBLE_2ADDR             = 0xcc,
    1, //OP_MUL_DOUBLE_2ADDR             = 0xcd,
    1, //OP_DIV_DOUBLE_2ADDR             = 0xce,
    1, //OP_REM_DOUBLE_2ADDR             = 0xcf,
    2, //OP_ADD_INT_LIT16                = 0xd0,
    2, //OP_RSUB_INT                     = 0xd1,
    2, //OP_MUL_INT_LIT16                = 0xd2,
    2, //OP_DIV_INT_LIT16                = 0xd3,
    2, //OP_REM_INT_LIT16                = 0xd4,
    2, //OP_AND_INT_LIT16                = 0xd5,
    2, //OP_OR_INT_LIT16                 = 0xd6,
    2, //OP_XOR_INT_LIT16                = 0xd7,
    2, //OP_ADD_INT_LIT8                 = 0xd8,
    2, //OP_RSUB_INT_LIT8                = 0xd9,
    2, //OP_MUL_INT_LIT8                 = 0xda,
    2, //OP_DIV_INT_LIT8                 = 0xdb,
    2, //OP_REM_INT_LIT8                 = 0xdc,
    2, //OP_AND_INT_LIT8                 = 0xdd,
    2, //OP_OR_INT_LIT8                  = 0xde,
    2, //OP_XOR_INT_LIT8                 = 0xdf,
    2, //OP_SHL_INT_LIT8                 = 0xe0,
    2, //OP_SHR_INT_LIT8                 = 0xe1,
    2, //OP_USHR_INT_LIT8                = 0xe2,
    2, //OP_IGET_VOLATILE                = 0xe3,
    2, //OP_IPUT_VOLATILE                = 0xe4,
    2, //OP_SGET_VOLATILE                = 0xe5,
    2, //OP_SPUT_VOLATILE                = 0xe6,
    2, //OP_IGET_OBJECT_VOLATILE         = 0xe7,
    2, //OP_IGET_WIDE_VOLATILE           = 0xe8,
    2, //OP_IPUT_WIDE_VOLATILE           = 0xe9,
    2, //OP_SGET_WIDE_VOLATILE           = 0xea,
    2, //OP_SPUT_WIDE_VOLATILE           = 0xeb,
    1, //OP_BREAKPOINT                   = 0xec,
    2, //OP_THROW_VERIFICATION_ERROR     = 0xed,
    3, //OP_EXECUTE_INLINE               = 0xee,
    3, //OP_EXECUTE_INLINE_RANGE         = 0xef,
    3, //OP_INVOKE_OBJECT_INIT_RANGE     = 0xf0,
    1, //OP_RETURN_VOID_BARRIER          = 0xf1,
    2, //OP_IGET_QUICK                   = 0xf2,
    2, //OP_IGET_WIDE_QUICK              = 0xf3,
    2, //OP_IGET_OBJECT_QUICK            = 0xf4,
    2, //OP_IPUT_QUICK                   = 0xf5,
    2, //OP_IPUT_WIDE_QUICK              = 0xf6,
    2, //OP_IPUT_OBJECT_QUICK            = 0xf7,
    3, //OP_INVOKE_VIRTUAL_QUICK         = 0xf8,
    3, //OP_INVOKE_VIRTUAL_QUICK_RANGE   = 0xf9,
    3, //OP_INVOKE_SUPER_QUICK           = 0xfa,
    3, //OP_INVOKE_SUPER_QUICK_RANGE     = 0xfb,
    2, //OP_IPUT_OBJECT_VOLATILE         = 0xfc,
    2, //OP_SGET_OBJECT_VOLATILE         = 0xfd,
    2, //OP_SPUT_OBJECT_VOLATILE         = 0xfe,
    1  //OP_UNUSED_FF                    = 0xff,
    // END(libdex-opcode-enum)
};
string OpcodeName[256] = {
    // BEGIN(libdex-opcode-enum); GENERATED AUTOMATICALLY BY opcode-gen
    "OP_NOP                         ", //0x00,
    "OP_MOVE                        ", //0x01,
    "OP_MOVE_FROM16                 ", //0x02,
    "OP_MOVE_16                     ", //0x03,
    "OP_MOVE_WIDE                   ", //0x04,
    "OP_MOVE_WIDE_FROM16            ", //0x05,
    "OP_MOVE_WIDE_16                ", //0x06,
    "OP_MOVE_OBJECT                 ", //0x07,
    "OP_MOVE_OBJECT_FROM16          ", //0x08,
    "OP_MOVE_OBJECT_16              ", //0x09,
    "OP_MOVE_RESULT                 ", //0x0a,
    "OP_MOVE_RESULT_WIDE            ", //0x0b,
    "OP_MOVE_RESULT_OBJECT          ", //0x0c,
    "OP_MOVE_EXCEPTION              ", //0x0d,
    "OP_RETURN_VOID                 ", //0x0e,
    "OP_RETURN                      ", //0x0f,
    "OP_RETURN_WIDE                 ", //0x10,
    "OP_RETURN_OBJECT               ", //0x11,
    "OP_CONST_4                     ", //0x12,
    "OP_CONST_16                    ", //0x13,
    "OP_CONST                       ", //0x14,
    "OP_CONST_HIGH16                ", //0x15,
    "OP_CONST_WIDE_16               ", //0x16,
    "OP_CONST_WIDE_32               ", //0x17,
    "OP_CONST_WIDE                  ", //0x18,
    "OP_CONST_WIDE_HIGH16           ", //0x19,
    "OP_CONST_STRING                ", //0x1a,
    "OP_CONST_STRING_JUMBO          ", //0x1b,
    "OP_CONST_CLASS                 ", //0x1c,
    "OP_MONITOR_ENTER               ", //0x1d,
    "OP_MONITOR_EXIT                ", //0x1e,
    "OP_CHECK_CAST                  ", //0x1f,
    "OP_INSTANCE_OF                 ", //0x20,
    "OP_ARRAY_LENGTH                ", //0x21,
    "OP_NEW_INSTANCE                ", //0x22,
    "OP_NEW_ARRAY                   ", //0x23,
    "OP_FILLED_NEW_ARRAY            ", //0x24,
    "OP_FILLED_NEW_ARRAY_RANGE      ", //0x25,
    "OP_FILL_ARRAY_DATA             ", //0x26,
    "OP_THROW                       ", //0x27,
    "OP_GOTO                        ", //0x28,
    "OP_GOTO_16                     ", //0x29,
    "OP_GOTO_32                     ", //0x2a,
    "OP_PACKED_SWITCH               ", //0x2b,
    "OP_SPARSE_SWITCH               ", //0x2c,
    "OP_CMPL_FLOAT                  ", //0x2d,
    "OP_CMPG_FLOAT                  ", //0x2e,
    "OP_CMPL_DOUBLE                 ", //0x2f,
    "OP_CMPG_DOUBLE                 ", //0x30,
    "OP_CMP_LONG                    ", //0x31,
    "OP_IF_EQ                       ", //0x32,
    "OP_IF_NE                       ", //0x33,
    "OP_IF_LT                       ", //0x34,
    "OP_IF_GE                       ", //0x35,
    "OP_IF_GT                       ", //0x36,
    "OP_IF_LE                       ", //0x37,
    "OP_IF_EQZ                      ", //0x38,
    "OP_IF_NEZ                      ", //0x39,
    "OP_IF_LTZ                      ", //0x3a,
    "OP_IF_GEZ                      ", //0x3b,
    "OP_IF_GTZ                      ", //0x3c,
    "OP_IF_LEZ                      ", //0x3d,
    "OP_UNUSED_3E                   ", //0x3e,
    "OP_UNUSED_3F                   ", //0x3f,
    "OP_UNUSED_40                   ", //0x40,
    "OP_UNUSED_41                   ", //0x41,
    "OP_UNUSED_42                   ", //0x42,
    "OP_UNUSED_43                   ", //0x43,
    "OP_AGET                        ", //0x44,
    "OP_AGET_WIDE                   ", //0x45,
    "OP_AGET_OBJECT                 ", //0x46,
    "OP_AGET_BOOLEAN                ", //0x47,
    "OP_AGET_BYTE                   ", //0x48,
    "OP_AGET_CHAR                   ", //0x49,
    "OP_AGET_SHORT                  ", //0x4a,
    "OP_APUT                        ", //0x4b,
    "OP_APUT_WIDE                   ", //0x4c,
    "OP_APUT_OBJECT                 ", //0x4d,
    "OP_APUT_BOOLEAN                ", //0x4e,
    "OP_APUT_BYTE                   ", //0x4f,
    "OP_APUT_CHAR                   ", //0x50,
    "OP_APUT_SHORT                  ", //0x51,
    "OP_IGET                        ", //0x52,
    "OP_IGET_WIDE                   ", //0x53,
    "OP_IGET_OBJECT                 ", //0x54,
    "OP_IGET_BOOLEAN                ", //0x55,
    "OP_IGET_BYTE                   ", //0x56,
    "OP_IGET_CHAR                   ", //0x57,
    "OP_IGET_SHORT                  ", //0x58,
    "OP_IPUT                        ", //0x59,
    "OP_IPUT_WIDE                   ", //0x5a,
    "OP_IPUT_OBJECT                 ", //0x5b,
    "OP_IPUT_BOOLEAN                ", //0x5c,
    "OP_IPUT_BYTE                   ", //0x5d,
    "OP_IPUT_CHAR                   ", //0x5e,
    "OP_IPUT_SHORT                  ", //0x5f,
    "OP_SGET                        ", //0x60,
    "OP_SGET_WIDE                   ", //0x61,
    "OP_SGET_OBJECT                 ", //0x62,
    "OP_SGET_BOOLEAN                ", //0x63,
    "OP_SGET_BYTE                   ", //0x64,
    "OP_SGET_CHAR                   ", //0x65,
    "OP_SGET_SHORT                  ", //0x66,
    "OP_SPUT                        ", //0x67,
    "OP_SPUT_WIDE                   ", //0x68,
    "OP_SPUT_OBJECT                 ", //0x69,
    "OP_SPUT_BOOLEAN                ", //0x6a,
    "OP_SPUT_BYTE                   ", //0x6b,
    "OP_SPUT_CHAR                   ", //0x6c,
    "OP_SPUT_SHORT                  ", //0x6d,
    "OP_INVOKE_VIRTUAL              ", //0x6e,
    "OP_INVOKE_SUPER                ", //0x6f,
    "OP_INVOKE_DIRECT               ", //0x70,
    "OP_INVOKE_STATIC               ", //0x71,
    "OP_INVOKE_INTERFACE            ", //0x72,
    "OP_UNUSED_73                   ", //0x73,
    "OP_INVOKE_VIRTUAL_RANGE        ", //0x74,
    "OP_INVOKE_SUPER_RANGE          ", //0x75,
    "OP_INVOKE_DIRECT_RANGE         ", //0x76,
    "OP_INVOKE_STATIC_RANGE         ", //0x77,
    "OP_INVOKE_INTERFACE_RANGE      ", //0x78,
    "OP_UNUSED_79                   ", //0x79,
    "OP_UNUSED_7A                   ", //0x7a,
    "OP_NEG_INT                     ", //0x7b,
    "OP_NOT_INT                     ", //0x7c,
    "OP_NEG_LONG                    ", //0x7d,
    "OP_NOT_LONG                    ", //0x7e,
    "OP_NEG_FLOAT                   ", //0x7f,
    "OP_NEG_DOUBLE                  ", //0x80,
    "OP_INT_TO_LONG                 ", //0x81,
    "OP_INT_TO_FLOAT                ", //0x82,
    "OP_INT_TO_DOUBLE               ", //0x83,
    "OP_LONG_TO_INT                 ", //0x84,
    "OP_LONG_TO_FLOAT               ", //0x85,
    "OP_LONG_TO_DOUBLE              ", //0x86,
    "OP_FLOAT_TO_INT                ", //0x87,
    "OP_FLOAT_TO_LONG               ", //0x88,
    "OP_FLOAT_TO_DOUBLE             ", //0x89,
    "OP_DOUBLE_TO_INT               ", //0x8a,
    "OP_DOUBLE_TO_LONG              ", //0x8b,
    "OP_DOUBLE_TO_FLOAT             ", //0x8c,
    "OP_INT_TO_BYTE                 ", //0x8d,
    "OP_INT_TO_CHAR                 ", //0x8e,
    "OP_INT_TO_SHORT                ", //0x8f,
    "OP_ADD_INT                     ", //0x90,
    "OP_SUB_INT                     ", //0x91,
    "OP_MUL_INT                     ", //0x92,
    "OP_DIV_INT                     ", //0x93,
    "OP_REM_INT                     ", //0x94,
    "OP_AND_INT                     ", //0x95,
    "OP_OR_INT                      ", //0x96,
    "OP_XOR_INT                     ", //0x97,
    "OP_SHL_INT                     ", //0x98,
    "OP_SHR_INT                     ", //0x99,
    "OP_USHR_INT                    ", //0x9a,
    "OP_ADD_LONG                    ", //0x9b,
    "OP_SUB_LONG                    ", //0x9c,
    "OP_MUL_LONG                    ", //0x9d,
    "OP_DIV_LONG                    ", //0x9e,
    "OP_REM_LONG                    ", //0x9f,
    "OP_AND_LONG                    ", //0xa0,
    "OP_OR_LONG                     ", //0xa1,
    "OP_XOR_LONG                    ", //0xa2,
    "OP_SHL_LONG                    ", //0xa3,
    "OP_SHR_LONG                    ", //0xa4,
    "OP_USHR_LONG                   ", //0xa5,
    "OP_ADD_FLOAT                   ", //0xa6,
    "OP_SUB_FLOAT                   ", //0xa7,
    "OP_MUL_FLOAT                   ", //0xa8,
    "OP_DIV_FLOAT                   ", //0xa9,
    "OP_REM_FLOAT                   ", //0xaa,
    "OP_ADD_DOUBLE                  ", //0xab,
    "OP_SUB_DOUBLE                  ", //0xac,
    "OP_MUL_DOUBLE                  ", //0xad,
    "OP_DIV_DOUBLE                  ", //0xae,
    "OP_REM_DOUBLE                  ", //0xaf,
    "OP_ADD_INT_2ADDR               ", //0xb0,
    "OP_SUB_INT_2ADDR               ", //0xb1,
    "OP_MUL_INT_2ADDR               ", //0xb2,
    "OP_DIV_INT_2ADDR               ", //0xb3,
    "OP_REM_INT_2ADDR               ", //0xb4,
    "OP_AND_INT_2ADDR               ", //0xb5,
    "OP_OR_INT_2ADDR                ", //0xb6,
    "OP_XOR_INT_2ADDR               ", //0xb7,
    "OP_SHL_INT_2ADDR               ", //0xb8,
    "OP_SHR_INT_2ADDR               ", //0xb9,
    "OP_USHR_INT_2ADDR              ", //0xba,
    "OP_ADD_LONG_2ADDR              ", //0xbb,
    "OP_SUB_LONG_2ADDR              ", //0xbc,
    "OP_MUL_LONG_2ADDR              ", //0xbd,
    "OP_DIV_LONG_2ADDR              ", //0xbe,
    "OP_REM_LONG_2ADDR              ", //0xbf,
    "OP_AND_LONG_2ADDR              ", //0xc0,
    "OP_OR_LONG_2ADDR               ", //0xc1,
    "OP_XOR_LONG_2ADDR              ", //0xc2,
    "OP_SHL_LONG_2ADDR              ", //0xc3,
    "OP_SHR_LONG_2ADDR              ", //0xc4,
    "OP_USHR_LONG_2ADDR             ", //0xc5,
    "OP_ADD_FLOAT_2ADDR             ", //0xc6,
    "OP_SUB_FLOAT_2ADDR             ", //0xc7,
    "OP_MUL_FLOAT_2ADDR             ", //0xc8,
    "OP_DIV_FLOAT_2ADDR             ", //0xc9,
    "OP_REM_FLOAT_2ADDR             ", //0xca,
    "OP_ADD_DOUBLE_2ADDR            ", //0xcb,
    "OP_SUB_DOUBLE_2ADDR            ", //0xcc,
    "OP_MUL_DOUBLE_2ADDR            ", //0xcd,
    "OP_DIV_DOUBLE_2ADDR            ", //0xce,
    "OP_REM_DOUBLE_2ADDR            ", //0xcf,
    "OP_ADD_INT_LIT16               ", //0xd0,
    "OP_RSUB_INT                    ", //0xd1,
    "OP_MUL_INT_LIT16               ", //0xd2,
    "OP_DIV_INT_LIT16               ", //0xd3,
    "OP_REM_INT_LIT16               ", //0xd4,
    "OP_AND_INT_LIT16               ", //0xd5,
    "OP_OR_INT_LIT16                ", //0xd6,
    "OP_XOR_INT_LIT16               ", //0xd7,
    "OP_ADD_INT_LIT8                ", //0xd8,
    "OP_RSUB_INT_LIT8               ", //0xd9,
    "OP_MUL_INT_LIT8                ", //0xda,
    "OP_DIV_INT_LIT8                ", //0xdb,
    "OP_REM_INT_LIT8                ", //0xdc,
    "OP_AND_INT_LIT8                ", //0xdd,
    "OP_OR_INT_LIT8                 ", //0xde,
    "OP_XOR_INT_LIT8                ", //0xdf,
    "OP_SHL_INT_LIT8                ", //0xe0,
    "OP_SHR_INT_LIT8                ", //0xe1,
    "OP_USHR_INT_LIT8               ", //0xe2,
    "OP_IGET_VOLATILE               ", //0xe3,
    "OP_IPUT_VOLATILE               ", //0xe4,
    "OP_SGET_VOLATILE               ", //0xe5,
    "OP_SPUT_VOLATILE               ", //0xe6,
    "OP_IGET_OBJECT_VOLATILE        ", //0xe7,
    "OP_IGET_WIDE_VOLATILE          ", //0xe8,
    "OP_IPUT_WIDE_VOLATILE          ", //0xe9,
    "OP_SGET_WIDE_VOLATILE          ", //0xea,
    "OP_SPUT_WIDE_VOLATILE          ", //0xeb,
    "OP_BREAKPOINT                  ", //0xec,
    "OP_THROW_VERIFICATION_ERROR    ", //0xed,
    "OP_EXECUTE_INLINE              ", //0xee,
    "OP_EXECUTE_INLINE_RANGE        ", //0xef,
    "OP_INVOKE_OBJECT_INIT_RANGE    ", //0xf0,
    "OP_RETURN_VOID_BARRIER         ", //0xf1,
    "OP_IGET_QUICK                  ", //0xf2,
    "OP_IGET_WIDE_QUICK             ", //0xf3,
    "OP_IGET_OBJECT_QUICK           ", //0xf4,
    "OP_IPUT_QUICK                  ", //0xf5,
    "OP_IPUT_WIDE_QUICK             ", //0xf6,
    "OP_IPUT_OBJECT_QUICK           ", //0xf7,
    "OP_INVOKE_VIRTUAL_QUICK        ", //0xf8,
    "OP_INVOKE_VIRTUAL_QUICK_RANGE  ", //0xf9,
    "OP_INVOKE_SUPER_QUICK          ", //0xfa,
    "OP_INVOKE_SUPER_QUICK_RANGE    ", //0xfb,
    "OP_IPUT_OBJECT_VOLATILE        ", //0xfc,
    "OP_SGET_OBJECT_VOLATILE        ", //0xfd,
    "OP_SPUT_OBJECT_VOLATILE        ", //0xfe,
    "OP_UNUSED_FF                   ", //0xff,
    // END(libdex-opcode-enum)
};
struct DexCode {
    u2  registersSize;
    u2  insSize;
    u2  outsSize;
    u2  triesSize;
    u4  debugInfoOff;       /* file offset to debug info stream */
    u4  insnsSize;          /* size of the insns array, in u2 units */
    u2  insns[1];
    /* followed by optional u2 padding */
    /* followed by try_item[triesSize] */
    /* followed by uleb128 handlersSize */
    /* followed by catch_handler_item[handlersSize] */
};
#define FETCH(_offset)     (pc[(_offset)])
#define INST_INST(_inst)    ((_inst) & 0xff)
int main(int argc, char** argv) {

    if (argc != 3) {
        cout << "ERROR argc num wrong " << argc << endl;
        return 0;
    }
    //printf("HELLO\n");
    
    string infile = std::string(argv[1]);
    string outfile = std::string(argv[2]);

    u1 buff[101000];
    FILE *infp = fopen(infile.c_str(), "r");

    int siz = fread(buff, sizeof(u1), 100000, infp);
    fclose(infp);

    DexCode *code = (DexCode *)malloc(siz + 4);
    memcpy(code, buff, siz);
    
    FILE *outfp = fopen(outfile.c_str(), "w");
    u2 *pc = code->insns;
    while ((u8)pc < (u8)&(code->insns[code->insnsSize])) {
        u2 inst = FETCH(0);
        fprintf(outfp, "%s\n", OpcodeName[INST_INST(inst)].c_str());
        pc = pc + OpcodeLength[INST_INST(inst)];
    }
    fclose(outfp);
    return 0;
}
